<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AdaptiveCards</name>
    </assembly>
    <members>
        <member name="T:AdaptiveCards.AdaptiveAction">
            <summary>
                Base of Action types
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveAction.Title">
            <summary>
                Title of the action
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveAction.Speak">
            <summary>
                Speak phrase for this action
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveAction.IconUrl">
            <summary>
                IconUrl that can be specified for actions
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveAction.Style">
            <summary>
                Style that can be specified for actions
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveActionSet">
            <summary>
            Represents the ActionSet element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveActionSet.TypeName">
            <summary>
            The AdaptiveCard element that this class implements.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveActionSet.Type">
            <summary>
            The JSON property name that this class implements.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveActionSet.Actions">
            <summary>
            The actions contained within this ActionSet.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveBackgroundImage">
            <summary>
            Represents the backgroundImage property
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveBackgroundImage.#ctor">
            <summary>
            Initializes a new AdaptiveBackgroundImage instance.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveBackgroundImage.#ctor(System.String)">
            <summary>
            Initializes a new AdaptiveBackgroundImage instance using the specified URL.
            </summary>
            <param name="url">The background image URL expressed as a string.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveBackgroundImage.#ctor(System.Uri)">
            <summary>
            Initializes a new AdaptiveBackgroundImage instance using the specified URL.
            </summary>
            <param name="url">The background image URL represented as a Uri object.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveBackgroundImage.#ctor(System.String,AdaptiveCards.AdaptiveImageFillMode,AdaptiveCards.AdaptiveHorizontalAlignment,AdaptiveCards.AdaptiveVerticalAlignment)">
            <summary>
            Initializes a new AdaptiveBackgroundImage instance using the specified parameters.
            </summary>
            <param name="url">The background image URL expressed as a string.</param>
            <param name="fillMode">Controls how the background image should be displayed.</param>
            <param name="hAlignment">Controls horizontal alignment.</param>
            <param name="vAlignment">Controls vertical alignment.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveBackgroundImage.#ctor(System.Uri,AdaptiveCards.AdaptiveImageFillMode,AdaptiveCards.AdaptiveHorizontalAlignment,AdaptiveCards.AdaptiveVerticalAlignment)">
            <summary>
            Initializes a new AdaptiveBackgroundImage instance using the specified parameters.
            </summary>
            <param name="url">The background image URL represented as a Uri object.</param>
            <param name="fillMode">Controls how the background image should be displayed.</param>
            <param name="hAlignment">Controls horizontal alignment.</param>
            <param name="vAlignment">Controls vertical alignment.</param>
        </member>
        <member name="F:AdaptiveCards.AdaptiveBackgroundImage.TypeName">
            <summary>
            The JSON property name that this class implements.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveBackgroundImage.Url">
            <summary>
            The Url of the background image.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveBackgroundImage.UrlString">
            <summary>
            The Url of the background image as a string.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveBackgroundImage.FillMode">
            <summary>
            Controls how the image is tiled or stretched.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveBackgroundImage.HorizontalAlignment">
            <summary>
            Determines how to align the background image horizontally.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveBackgroundImage.VerticalAlignment">
            <summary>
            Determines how to align the background image vertically.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveBackgroundImage.HasDefaultValues">
            <summary>
            Determines if this instance only has default property values set (aside from <see cref="P:AdaptiveCards.AdaptiveBackgroundImage.Url"/>).
            </summary>
            <returns>true iff this instance has only default property values.</returns>
        </member>
        <member name="M:AdaptiveCards.AdaptiveBackgroundImage.op_Implicit(System.Uri)~AdaptiveCards.AdaptiveBackgroundImage">
            <summary>
            Implicitly create an AdaptiveBackgroundImage from a Uri
            </summary>
            <param name="backgroundImageUrl"></param>
        </member>
        <member name="T:AdaptiveCards.AdaptiveBackgroundImageConverter">
            <summary>
            Helper class used by Newtonsoft.Json to convert the backgroundImage property to/from JSON.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveBackgroundImageConverter.Warnings">
            <summary>
            A list of warnings generated by the converter.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveBackgroundImageConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the object to JSON. If the supplied <paramref name="backgroundImage"/> is all default values and a URL, will write as a simple string. Otherwise, serialize the supplied <paramref name="backgroundImage"/> as a JSON object via the <paramref name="serializer"/>.
            </summary>
            <param name="writer">JsonWriter to write to.</param>
            <param name="backgroundImage">The AdaptiveBackgroundImage object to write.</param>
            <param name="serializer">JsonSerializer to use for serialization.</param>
        </member>
        <member name="P:AdaptiveCards.AdaptiveBackgroundImageConverter.CanWrite">
            <summary>
            Lets Newtonsoft.Json know that this class supports writing.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveBackgroundImageConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Generates a new <see cref="T:AdaptiveCards.AdaptiveBackgroundImage"/> instance from JSON.
            </summary>
            <param name="reader">JsonReader from which to read.</param>
            <param name="objectType">Not used.</param>
            <param name="existingValue">Not used.</param>
            <param name="serializer">Not used.</param>
            <returns>A new <see cref="T:AdaptiveCards.AdaptiveBackgroundImage"/> instance.</returns>
        </member>
        <member name="M:AdaptiveCards.AdaptiveBackgroundImageConverter.CanConvert(System.Type)">
            <summary>
            Called by Newtonsoft.Json to determine if this converter knows how to convert an object of type <paramref name="objectType"/>.
            </summary>
            <param name="objectType">The type of object to convert.</param>
            <returns></returns>
        </member>
        <member name="T:AdaptiveCards.AdaptiveInternalID">
            <summary>
            Represents a unique identifier.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveInternalID.Invalid">
            <summary>
            Value representing an invalid (or unset) AdaptiveInternalID
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveInternalID.#ctor">
            <summary>
            Initializes an invalid AdaptiveInternalID
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveInternalID.#ctor(System.UInt32)">
            <summary>
            Initializes an AdaptiveInternalID with the supplied <paramref name="id"/>.
            </summary>
            <param name="id">The id with which to initialize.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveInternalID.Current">
            <summary>
            Retrieves the current AdaptiveInternalID
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveInternalID.Next">
            <summary>
            Advances to the next AdaptiveInternalID.
            </summary>
            <returns>The next AdaptiveInternalID.</returns>
        </member>
        <member name="M:AdaptiveCards.AdaptiveInternalID.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:AdaptiveCards.AdaptiveInternalID.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:AdaptiveCards.AdaptiveInternalID.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="T:AdaptiveCards.AdaptiveFallbackElement">
            <summary>
            Represents the fallback property.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveFallbackElement.drop">
            <summary>
            String that represents "drop" fallback type
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveFallbackElement.AdaptiveFallbackType">
            <summary>
            Enumeration describing an object's fallback type.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveFallbackElement.AdaptiveFallbackType.None">
            <summary>
            This object does not have fallback specified.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveFallbackElement.AdaptiveFallbackType.Drop">
            <summary>
            Drop this element during fallback.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveFallbackElement.AdaptiveFallbackType.Content">
            <summary>
            This element has content to show in the event of fallback being triggered.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFallbackElement.#ctor(AdaptiveCards.AdaptiveFallbackElement.AdaptiveFallbackType)">
            <summary>
            Initializes an AdaptiveFallbackElement with the given <paramref name="fallbackType"/>.
            </summary>
            <param name="fallbackType">The type of fallback this instance represents.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFallbackElement.#ctor(AdaptiveCards.AdaptiveTypedElement)">
            <summary>
            Initializes an AdaptiveFallbackElement with the given <paramref name="fallbackContent"/>.
            </summary>
            <param name="fallbackContent">The content to show in the event of fallback.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFallbackElement.#ctor">
            <summary>
            Initializes an AdaptiveFallbackElement with no fallback type.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveFallbackElement.Type">
            <summary>
            Represents the type of fallback to perform.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveFallbackElement.Content">
            <summary>
            The content to show in the event of fallback.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveCard">
            <summary>
                Adaptive card which has flexible container
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveCard.ContentType">
            <summary>
            AdaptiveCard mimetype.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveCard.TypeName">
            <summary>
            The AdaptiveCard element that this class implements.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.Type">
            <inheritdoc/>
        </member>
        <member name="F:AdaptiveCards.AdaptiveCard.KnownSchemaVersion">
            <summary>
            The latest known schema version supported by this library.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCard.#ctor(AdaptiveCards.AdaptiveSchemaVersion)">
            <summary>
            Creates an AdaptiveCard using a specific schema version.
            </summary>
            <param name="schemaVersion">The schema version to use</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCard.#ctor(System.String)">
            <inheritdoc />
            <param name="schemaVersion">The schema version to use</param>.
        </member>
        <member name="M:AdaptiveCards.AdaptiveCard.#ctor">
            <inheritdoc />
            <summary>
            Creates an AdaptiveCard using the <see cref="F:AdaptiveCards.AdaptiveCard.KnownSchemaVersion" /> of this library.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.Version">
            <summary>
            Schema version that this card requires. If a client is lower than this version the fallbackText will be rendered.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.MinVersion">
            <summary>
            This is obsolete. Use the <see cref="P:AdaptiveCards.AdaptiveCard.Version"/> property instead.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.FallbackText">
            <summary>
            Text shown when the client doesn’t support the version specified. This can be in markdown format.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.Speak">
            <summary>
            Speak annotation for the card.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.Lang">
            <summary>
            The 2-letter ISO-639-1 language used in the card. Used to localize any date/time functions.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.Title">
            <summary>
            Title for the card (used when displayed in a dialog).
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.BackgroundImage">
            <summary>
            Background image for card.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.Height">
            <summary>
            Value that denotes if the card must use all the vertical space that is set to it. Default value is <see cref="F:AdaptiveCards.AdaptiveHeightType.Auto"/>.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.PixelMinHeight">
            <summary>
            Explicit card minimum height in pixels.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.Body">
            <summary>
            The Body elements for this card.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCard.ShouldSerializeBody">
            <summary>
            Determines whether the body portion of an AdaptiveCard should be serialized.
            </summary>
            <returns>true iff the body should be serialized.</returns>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.Actions">
            <summary>
            The Actions for this card.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCard.ShouldSerializeActions">
            <summary>
            Determines whether the actions portion of an AdaptiveCard should be serialized.
            </summary>
            <returns>true iff actions should be serialized.</returns>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.JsonSchema">
            <summary>
            This makes sure the $schema property doesn't show up in AdditionalProperties
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCard.ShouldSerializeJsonSchema">
            <summary>
            Determines whether the schema entry in an AdaptiveCard should be serialized.
            </summary>
            <returns>false</returns>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.VerticalContentAlignment">
            <summary>
            The content alignment for the element inside the container.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.SelectAction">
            <summary>
            Action for the card (this allows a default action at the card level)
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCard.ShouldSerializeHeight">
            <summary>
            Determines whether the height property of an AdaptiveCard should be serialized.
            </summary>
            <returns>true iff the height property should be serialized.</returns>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCard.OnDeserializingMissingVersion">
            <summary>
            Callback that will be invoked should a null or empty version string is encountered. The callback may return an alternate version to use for parsing.
            </summary>
            <example>
                AdaptiveCard.OnDeserializingMissingVersion = () => new AdaptiveSchemaVersion(0, 5);
            </example>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCard.FromJson(System.String)">
            <summary>
            Parse an AdaptiveCard from a JSON string.
            </summary>
            <param name="json">A JSON-serialized Adaptive Card.</param>
            <returns>The result of parsing <paramref name="json"/>.</returns>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCard.ToJson">
            <summary>
            Serialize this AdaptiveCard to JSON.
            </summary>
            <returns>The JSON representation of this AdaptiveCard.</returns>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCard.GetResourceInformation">
            <summary>
            Get resource information for all images and media present in this card.
            </summary>
            <returns>Resource information for the entire card.</returns>
        </member>
        <member name="T:AdaptiveCards.AdaptiveCardConverter">
            <summary>
            Helper class used by Newtonsoft.Json to convert an AdaptiveCard to/from JSON.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCardConverter.Warnings">
            <summary>
            A list of warnings generated by the converter.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCardConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCardConverter.CanWrite">
            <inheritdoc/>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCardConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Generates a new <see cref="T:AdaptiveCards.AdaptiveCard"/> instance from JSON.
            </summary>
            <param name="reader">JsonReader from which to read.</param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns>A new AdaptiveCard instance on success.</returns>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCardConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:AdaptiveCards.AdaptiveCardParseResult">
            <summary>
            The result of parsing an AdaptiveCard from JSON.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCardParseResult.Card">
            <summary>
            The parsed card object.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCardParseResult.Warnings">
            <summary>
            A collection of any warnings that might have been encountered when parsing the card.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveChoice">
            <summary>
                Choice as part of a Input.AdaptiveChoiceSetInput element
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveChoice.Title">
            <summary>
                Display text for the choice
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveChoice.Value">
            <summary>
                Internal value which will be collected as input if the choice is selected
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveChoice.IsSelected">
            <summary>
                Is this choice selected?
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveChoice.Speak">
            <summary>
                (OPTIONAL) Speech description of the choice
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveChoiceInputStyle">
            <summary>
            The style of ChoiceInput to display.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveChoiceInputStyle.Compact">
            <summary>
            Compact display similar to a ComboBox.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveChoiceInputStyle.Expanded">
            <summary>
            Expanded display i.e. Checkbox or Radio buttons.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveChoiceSetInput">
            <summary>
            Represents the Input.ChoiceSet element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveChoiceSetInput.TypeName">
            <summary>
            The AdaptiveCard element that this class implements.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveChoiceSetInput.Type">
            <inheritdoc/>
        </member>
        <member name="P:AdaptiveCards.AdaptiveChoiceSetInput.Value">
            <summary>
            Comma separated string of selected Choice values.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveChoiceSetInput.Style">
            <summary>
            The style to use when displaying this Input.ChoiceSet.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveChoiceSetInput.IsMultiSelect">
            <summary>
            Determines whether multiple selections are allowed.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveChoiceSetInput.Choices">
            <summary>
            A collection of available choices.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveChoiceSetInput.Wrap">
            <summary>
            Controls text wrapping behavior.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveChoiceSetInput.GetNonInteractiveValue">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveCollectionElement">
            <summary>
            Base class for all elements that contain other elements.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCollectionElement.Style">
            <summary>
            The style used to display this element. See <see cref="T:AdaptiveCards.AdaptiveContainerStyle" />.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCollectionElement.StyleXml">
            <summary>
            Controls XML serialization of style.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveCollectionElement.ShouldSerializeStyleXml">
            <summary>
            Determines whether to serialize the style for XML.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCollectionElement.VerticalContentAlignment">
            <summary>
            The content alignment for the element inside the container.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCollectionElement.SelectAction">
            <summary>
            Action for this container. This allows for setting a default action at the container level.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCollectionElement.Bleed">
            <summary>
            Defines if the element can bleed through its parent's padding.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveCollectionElement.PixelMinHeight">
            <summary>
            Explicit container element minimum height.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveColumn">
            <summary>
            Represents the Column element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveColumn.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveColumn.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveColumn.Size">
            <summary>
            Size for the column (either ColumnSize string or number which is relative size of the column).
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveColumn.Width">
            <summary>
            Width for the column (either ColumnWidth string or number which is relative size of the column).
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveColumnSet">
            <summary>
            Represents the ColumnSet element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveColumnSet.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveColumnSet.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveColumnSet.Columns">
            <summary>
            Collection of Columns that this ColumnSet contains.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveColumnSize">
            <summary>
                Controls the horizontal size (width) of Column.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveColumnSize.Auto">
            <summary>
                The width of the Column is optimally chosen depending on the space available in the element's container
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveColumnSize.Stretch">
            <summary>
                The width of the Column adjusts to match that of its container
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveColumnWidth">
            <summary>
                Controls the horizontal size (width) of Column.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveColumnWidth.Auto">
            <summary>
                The width of the Column is optimally chosen depending on the space available in the element's container
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveColumnWidth.Stretch">
            <summary>
                The width of the Column adjusts to match that of its container
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveContainer">
            <summary>
            Represents the Container element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveContainer.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveContainer.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveContainer.BackgroundImage">
            <summary>
            Background image to use when displaying this container.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveContainer.Items">
            <summary>
            Elements within this container.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveContainerStyle">
            <summary>
            Controls which style to apply to a container.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveContainerStyle.Normal">
            <summary>
            The container is a normal container
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveContainerStyle.Default">
            <summary>
            The container should be displayed using the default style
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveContainerStyle.Emphasis">
            <summary>
            The container should be displayed using the emphasis style
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveContainerStyle.Good">
            <summary>
            The container should be displayed using the good style
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveContainerStyle.Attention">
            <summary>
            The container should be displayed using the attention style
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveContainerStyle.Warning">
            <summary>
            The container should be displayed using the warning style
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveContainerStyle.Accent">
            <summary>
            The container should be displayed using the accent style
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveDateInput">
            <summary>
            Represents the Input.Date element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveDateInput.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveDateInput.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveDateInput.Placeholder">
            <summary>
            Placeholder text to display.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveDateInput.Value">
            <summary>
            The initial value for the field.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveDateInput.Min">
            <summary>
            Hint of minimum value (note: may be ignored by some clients).
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveDateInput.Max">
            <summary>
            Hint of maximum value (note: may be ignored by some clients).
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveDateInput.GetNonInteractiveValue">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveElement">
            <summary>
            Represents an element in Adaptive Cards.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveElement.Spacing">
            <summary>
            The amount of space the element should be separated from the previous element. Default value is <see cref="F:AdaptiveCards.AdaptiveSpacing.Default"/>.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveElement.Separator">
            <summary>
            Indicates whether there should be a visible separator (e.g. a line) between this element and the one before it.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveElement.Speak">
            <summary>
            SSML fragment for spoken interaction.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveElement.Height">
            <summary>
            The amount of space the element should be separated from the previous element. Default value is <see cref="P:AdaptiveCards.AdaptiveHeight.Auto"/>.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveElement.ShouldSerializeHeight">
            <summary>
            Determines whether the height property should be serialized or not.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveElement.IsVisible">
            <summary>
            Indicates whether the element should be visible when the card has been rendered.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveException">
            <summary>
            Represents an exception thrown by Adaptive Cards itself.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveException.#ctor">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveFact">
            <summary>
            Represents a "fact" in a FactSet element.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFact.#ctor">
            <summary>
            Initializes an empty Fact.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFact.#ctor(System.String,System.String)">
            <summary>
            Initializes a Fact with the given properties.
            </summary>
            <param name="title">The title of the Fact.</param>
            <param name="value">The value of the Fact.</param>
        </member>
        <member name="P:AdaptiveCards.AdaptiveFact.Title">
            <summary>
            The Fact's title.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveFact.Value">
            <summary>
            The Fact's value.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveFact.Speak">
            <summary>
            (Optional) Specifies what should be spoken for this entire element. This is simple text or SSML fragment.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveFactSet">
            <summary>
            Represents the FactSet element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveFactSet.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveFactSet.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveFactSet.Facts">
            <summary>
            A collection of Facts to this FactSet contains.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveFallbackConverter">
            <summary>
            A converter to use with Newtonsoft.Json that handles fallback scenarios.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveFallbackConverter.Warnings">
            <summary>
            A list of warnings generated by this converter.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveFallbackConverter.CanWrite">
            <summary>
            Lets Newtonsoft.Json know that this converter knows how to write JSON.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFallbackConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Called by Newtonsoft.Json to write the given element as JSON.
            </summary>
            <param name="writer">Destination for serialized content.</param>
            <param name="cardElement">Element to serialize.</param>
            <param name="serializer">Serializer to use.</param>
        </member>
        <member name="F:AdaptiveCards.AdaptiveFallbackConverter.IsInFallback">
            <summary>
            State tracking to determine whether we're currently processing a fallback request.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveFallbackConverter.CanRead">
            <summary>
            Lets Newtonsoft.Json know that this converter knows how to read JSON.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFallbackConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Called by Newtonsoft.Json to convert the given JSON to an object instance.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFallbackConverter.CanConvert(System.Type)">
            <summary>
            Called by Newtonsoft.Json to determine if an object is recognized by this converter.
            </summary>
            <param name="objectType">Type of object.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFallbackConverter.ParseFallback(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.JsonSerializer,System.String,AdaptiveCards.AdaptiveInternalID)">
            <summary>
            Helper to handle instantiating an <see cref="T:AdaptiveCards.AdaptiveFallbackElement" /> during JSON parsing.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveFallbackException">
            <summary>
            An exception thrown while processing fallback.
            </summary>
            <remarks>
            This exception is intended to be caught and handled by an element that has a fallback action.
            </remarks>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFallbackException.#ctor">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveFallbackException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveFallbackException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveFeatureRegistration">
            <summary>
            Tracks features supported by a host. When an Adaptive Cards element declares "requires", this is the collection
            that gets used.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFeatureRegistration.#ctor">
            <summary>
            Initializes a new AdaptiveFeatureRegistration instance.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFeatureRegistration.Get(System.String)">
            <summary>
            Retrieves the version of a registered feature.
            </summary>
            <param name="feature">The feature whose version is being requested.</param>
            <returns>The version of the feature if it is registered. Otherwise, the empty string.</returns>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFeatureRegistration.Set(System.String,System.String)">
            <summary>
            Sets (or registers) a feature to a particular version.
            </summary>
            <param name="feature">The feature upon which to set a version.</param>
            <param name="version">The version to set.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveFeatureRegistration.Remove(System.String)">
            <summary>
            Removes (or unregisters) a feature.
            </summary>
            <param name="feature">The feature to remove.</param>
        </member>
        <member name="T:AdaptiveCards.AdaptiveFontType">
            <summary>
                Controls the font type of the TextBlock Elements
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveFontType.Default">
            <summary>
                The default font type for general use
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveFontType.Monospace">
            <summary>
                The monospace font type
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveHeightType">
            <summary>
            Controls the vertical size (height) of element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveHeightType.Auto">
            <summary>
            The height of the element matches element content.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveHeightType.Stretch">
            <summary>
            The height of the element uses as much space as it is able to.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveHeightType.Pixel">
            <summary>
            The height of the element was explicitly specified (only for Image elements).
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveHeight">
            <summary>
            Represents the height property in Adaptive Cards.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveHeight.Auto">
            <summary>
            Returns a new AdaptiveHeight instance initialized for the <see cref="F:AdaptiveCards.AdaptiveHeightType.Auto"/> height type.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveHeight.Stretch">
            <summary>
            Returns a new AdaptiveHeight instance initialized for the <see cref="F:AdaptiveCards.AdaptiveHeightType.Stretch"/> height type.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveHeight.#ctor">
            <summary>
            Initializes an empty AdaptiveHeight instance.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveHeight.#ctor(System.UInt32)">
            <summary>
            Initializes an AdaptiveHeight instance with the given pixel size.
            </summary>
            <param name="px">The device-independent pixel size to use.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveHeight.#ctor(AdaptiveCards.AdaptiveHeightType)">
            <summary>
            Initializes an AdaptiveHeight instance with the given <see cref="T:AdaptiveCards.AdaptiveHeightType"/>.
            </summary>
            <param name="heightType">The AdaptiveHeightType to use.</param>
        </member>
        <member name="P:AdaptiveCards.AdaptiveHeight.HeightType">
            <summary>
            The <see cref="T:AdaptiveCards.AdaptiveHeightType"/> this instance represents.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveHeight.Unit">
            <summary>
            The specific height to use (only valid for the <see cref="F:AdaptiveCards.AdaptiveHeightType.Pixel"/> type).
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveHeight.UnitXml">
            <summary>
            Helper to aid in XML serialization of the <see cref="P:AdaptiveCards.AdaptiveHeight.Unit"/> property.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveHeight.ShouldSerializeUnitXml">
            <summary>
            Determines whether to serialize the <see cref="P:AdaptiveCards.AdaptiveHeight.UnitXml"/> property.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveHeight.IsPixel">
            <summary>
            Returns true if this <see cref="T:AdaptiveCards.AdaptiveHeight"/> instance represents the <see
            cref="F:AdaptiveCards.AdaptiveHeightType.Pixel"/> <see cref="T:AdaptiveCards.AdaptiveHeightType"/>.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveHeight.ShouldSerializeAdaptiveHeight">
            <summary>
            Determines whether this <see cref="T:AdaptiveCards.AdaptiveHeight"/> instance should be serialized.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveHeight.op_Equality(AdaptiveCards.AdaptiveHeight,AdaptiveCards.AdaptiveHeight)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveHeight.op_Inequality(AdaptiveCards.AdaptiveHeight,AdaptiveCards.AdaptiveHeight)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveHeight.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveHeight.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveHeight.Equals(AdaptiveCards.AdaptiveHeight)">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveHorizontalAlignment">
            <summary>
                Controls how elements are horizontally positioned within their container.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveHorizontalAlignment.Left">
            <summary>
                The element is left aligned
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveHorizontalAlignment.Center">
            <summary>
                The element is centered inside its container
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveHorizontalAlignment.Right">
            <summary>
                The element is right aligned
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveHorizontalAlignment.Stretch">
            <summary>
            Stretch the actions to fit the containerhrit
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveImage">
            <summary>
            Represents the Adaptive Cards Image element type.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveImage.#ctor">
            <summary>
            Initializes an empty <see cref="T:AdaptiveCards.AdaptiveImage"/> instance.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveImage.#ctor(System.String)">
            <summary>
            Initializes an <see cref="T:AdaptiveCards.AdaptiveImage"/> instance with the given URL.
            </summary>
            <param name="url">The URL of the image as a string.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveImage.#ctor(System.Uri)">
            <summary>
            Initializes an <see cref="T:AdaptiveCards.AdaptiveImage"/> instance with the given URL.
            </summary>
            <param name="url">The URL of the image.</param>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImage.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveImage.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveImage.Size">
            <summary>
            Controls the sizing (<see cref="T:AdaptiveCards.AdaptiveImageSize"/>) of the displayed image.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveImage.Style">
            <summary>
            The style (<see cref="T:AdaptiveCards.AdaptiveImageStyle"/>) in which the image is displayed.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveImage.Url">
            <summary>
            The URL of the image.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveImage.UrlString">
            <summary>
            This is necessary for XML serialization. You should use the <see cref="F:Url" /> property directly.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveImage.HorizontalAlignment">
            <summary>
            Horizontal alignment (<see cref="T:AdaptiveCards.AdaptiveHorizontalAlignment"/>) to use.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveImage.BackgroundColor">
            <summary>
            A background color for the image specified as #AARRGGBB or #RRGGBB.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveImage.SelectAction">
            <summary>
            Action to execute when image is invoked.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveImage.AltText">
            <summary>
            Alternate text (alttext) to display for this image.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveImage.PixelWidth">
            <summary>
            Explicit image width.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveImage.PixelHeight">
            <summary>
            Explicit image height.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveImageFillMode">
            <summary>
            Controls how an image fills a space.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageFillMode.Cover">
            <summary>
            Image covers the entire width of its container (preserving aspect ratio). The image may be clipped if the
            aspect ratio of the image doesn't match the aspect ratio of its container. <see
            cref="T:AdaptiveCards.AdaptiveVerticalAlignment"/> is respected, but <see cref="T:AdaptiveCards.AdaptiveHorizontalAlignment"/> is ignored
            (as it's irrelevant).
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageFillMode.RepeatHorizontally">
            <summary>
            The image isn't stretched. Rather, it's repeated on the x-axis as many times as needed to cover the
            container's width. <see cref="T:AdaptiveCards.AdaptiveVerticalAlignment"/> is respected (defaults to <see
            cref="F:AdaptiveCards.AdaptiveVerticalAlignment.Top"/>). <see cref="T:AdaptiveCards.AdaptiveHorizontalAlignment"/> is ignored.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageFillMode.RepeatVertically">
            <summary>
            The image isn't stretched. Rather, it's repeated on the y-axis as many times as needed to cover the
            container's width. <see cref="T:AdaptiveCards.AdaptiveHorizontalAlignment"/> is respected (defaults to <see
            cref="F:AdaptiveCards.AdaptiveHorizontalAlignment.Left"/>). <see cref="T:AdaptiveCards.AdaptiveVerticalAlignment"/> is ignored.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageFillMode.Repeat">
            <summary> The image isn't stretched. Rather, it's repeated on the x-axis and then on the y-axis as many
            times as needed to cover the container's width. Both <see cref="T:AdaptiveCards.AdaptiveHorizontalAlignment"/> and <see
            cref="F:AdaptiveCards.AdaptiveHorizontalAlignment.Left"/>) are respected. (defaults to <see
            cref="F:AdaptiveCards.AdaptiveVerticalAlignment.Top"/> and <see cref="F:AdaptiveCards.AdaptiveHorizontalAlignment.Left"/>
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveImageSet">
            <summary>
            Represents an ImageSet element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageSet.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveImageSet.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveImageSet.Images">
            <summary>
            Collection of images to display.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveImageSet.ImageSize">
            <summary>
            Specifies the <see cref="T:AdaptiveCards.AdaptiveImageSize"/> of each image in the set.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveImageSize">
            <summary>
                Controls the horizontal size (width) of element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageSize.Auto">
            <summary>
                The width of the element is optimally chosen depending on the space available in the element's container
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageSize.Stretch">
            <summary>
                The width of the element adjusts to match that of its container
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageSize.Small">
            <summary>
                Small width
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageSize.Medium">
            <summary>
                Medium width
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageSize.Large">
            <summary>
                Large width
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveImageStyle">
            <summary>
                Controls the way Image elements are displayed.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageStyle.Default">
            <summary>
                The image is displayed within a rectangle.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageStyle.Normal">
            <summary>
                The image is displayed within a rectangle.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveImageStyle.Person">
            <summary>
                The image is cropped to a circle, a common way to represent people photos.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveInline">
            <summary>
            Represents a single inline text entry.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveInline.Type">
            <summary>
            The type name of the inline.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveInline.AdditionalProperties">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveInline.ShouldSerializeAdditionalProperties">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveInput">
            <summary>
            Represents any input element.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveInput.IsRequired">
            <summary>
            Sets the input as required for triggering Submit actions.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveInput.Label">
            <summary>
            Label to be shown next to input.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveInput.ErrorMessage">
            <summary>
            Error message to be shown when validation fails.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveInput.GetNonInteractiveValue">
            <summary>
            The string that will be rendered on a a host with "SupportsInteractivity" set to false.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveMedia">
            <summary>
            Represents the Media element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveMedia.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveMedia.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveMedia.Sources">
            <summary>
            A collection of source from which to retrieve the media.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveMedia.Poster">
            <summary>
            URL for the poster image to show for this media element.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveMedia.AltText">
            <summary>
            Alternate text to display for this media element.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveMediaSource">
            <summary>
            Represents a "media source" for a Media element.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveMediaSource.#ctor">
            <summary>
            Initializes an empty <see cref="T:AdaptiveCards.AdaptiveMediaSource"/>.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveMediaSource.#ctor(System.String,System.String)">
            <summary>
            Initializes an <see cref="T:AdaptiveCards.AdaptiveMediaSource"/> instance with the given properties.
            </summary>
            <param name="mimeType">The mime type of the media.</param>
            <param name="url">The url from which to load the media.</param>
        </member>
        <member name="P:AdaptiveCards.AdaptiveMediaSource.MimeType">
            <summary>
            The mime type of this media source.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveMediaSource.Url">
            <summary>
            The URL of this media source.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveNumberInput">
            <summary>
            Represents the Input.Number element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveNumberInput.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveNumberInput.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveNumberInput.Placeholder">
            <summary>
            Text to display as a placeholder.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveNumberInput.Value">
            <summary>
            The initial value for the field.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveNumberInput.Min">
            <summary>
            Hint of minimum value (may be ignored by some clients).
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveNumberInput.Max">
            <summary>
            Hint of maximum value (may be ignored by some clients).
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveNumberInput.GetNonInteractiveValue">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveOpenUrlAction">
            <summary>
            When ActionOpenUrl is invoked it will show the given url, either by launching it to an external web
            browser or showing in-situ with embedded web browser.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveOpenUrlAction.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveOpenUrlAction.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveOpenUrlAction.Url">
            <summary>
            Url to open using default operating system browser.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveOpenUrlAction.UrlString">
            <summary>
            This is necessary for XML serialization. You should use the <see cref="F:Url" /> property directly.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveRichTextBlock">
            <summary>
            Represents the RichTextBlock element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveRichTextBlock.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveRichTextBlock.Type">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveRichTextBlock.#ctor">
            <summary>
            Initializes an empty <see cref="T:AdaptiveCards.AdaptiveRichTextBlock"/>.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveRichTextBlock.HorizontalAlignment">
            <summary>
            Horizontal alignment for element.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveRichTextBlock.Inlines">
            <summary>
            A list of text inlines in this RichTextBlock.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveSchemaVersion">
            <summary>
            Represents the AdaptiveCards schema version.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveSchemaVersion.Major">
            <summary>
            Major version number.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveSchemaVersion.Minor">
            <summary>
            Minor version number.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.#ctor">
            <summary>
            Initializes an empty <see cref="T:AdaptiveCards.AdaptiveSchemaVersion"/>.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.#ctor(System.String)">
            <summary>
            Initializes an <see cref="T:AdaptiveCards.AdaptiveSchemaVersion"/> instance.
            </summary>
            <param name="versionString">A string representing the schema version.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.#ctor(System.Int32,System.Int32)">
            <summary>
            Iniializes an <see cref="T:AdaptiveCards.AdaptiveSchemaVersion"/> instance.
            </summary>
            <param name="major">The schema major version.</param>
            <param name="minor">The schema minor version.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.ToString">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.op_Implicit(System.String)~AdaptiveCards.AdaptiveSchemaVersion">
            <summary>
            Implicit conversion operator from <see cref="T:System.String"/> to <see cref="T:AdaptiveCards.AdaptiveSchemaVersion"/>.
            </summary>
            <param name="versionString">A string representing the schema version.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.op_Equality(AdaptiveCards.AdaptiveSchemaVersion,AdaptiveCards.AdaptiveSchemaVersion)">
            <summary>
            Equality comparison operator.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.op_Inequality(AdaptiveCards.AdaptiveSchemaVersion,AdaptiveCards.AdaptiveSchemaVersion)">
            <summary>
            Inequality comparison operator.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.CompareTo(AdaptiveCards.AdaptiveSchemaVersion)">
            <summary>
            Compares this instance to another instance.
            </summary>
            <param name="other">AdaptiveSchemaVersion instance to compare to.</param>
            <returns>0 iff the other AdaptiveSchemaVersion is equal to this one.</returns>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.op_LessThan(AdaptiveCards.AdaptiveSchemaVersion,AdaptiveCards.AdaptiveSchemaVersion)">
            <summary>
            Less-than operator.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.op_GreaterThan(AdaptiveCards.AdaptiveSchemaVersion,AdaptiveCards.AdaptiveSchemaVersion)">
            <summary>
            Greater-than operator.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.op_LessThanOrEqual(AdaptiveCards.AdaptiveSchemaVersion,AdaptiveCards.AdaptiveSchemaVersion)">
            <summary>
            Less-than-or-equal operator.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSchemaVersion.op_GreaterThanOrEqual(AdaptiveCards.AdaptiveSchemaVersion,AdaptiveCards.AdaptiveSchemaVersion)">
            <summary>
            Greater-than-or-equal operator.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveSerializationException">
            <summary>
            Represents an exception that occurs during serialization.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveSerializationException.#ctor">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveSerializationException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveSerializationException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveShowCardAction">
            <summary>
            Represents the Action.ShowCard element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveShowCardAction.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveShowCardAction.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveShowCardAction.Card">
            <summary>
            <see cref="T:AdaptiveCards.AdaptiveCard"/> to show when the action is invoked.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveSpacing">
            <summary>
            Controls the spacing of an element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveSpacing.Default">
            <summary>
            Use the default spacing.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveSpacing.None">
            <summary>
            Use no spacing.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveSpacing.Small">
            <summary>
            Use small spacing.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveSpacing.Medium">
            <summary>
            Use medium spacing.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveSpacing.Large">
            <summary>
            Use large spacing.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveSpacing.ExtraLarge">
            <summary>
            Use extra large spacing.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveSpacing.Padding">
            <summary>
            This results in the same padding that's applied to the card itself.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveSubmitAction">
            <summary>
                Submit action gathers up input fields, merges with optional data field and generates event to client
                asking for data to be submitted. It is up to the client to determine how that data is processed. For
                example: With BotFramework bots the client would send an activity through the messaging medium to the bot.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveSubmitAction.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveSubmitAction.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveSubmitAction.Data">
            <summary>
                initial data that input fields will be combined with. This is essentially 'hidden' properties, Example:
                {"id":"123123123"}
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveSubmitAction.DataJson">
            <summary>
            Get or set the data as a JSON string.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveTargetElement">
            <summary>
            Represents the target of an Action.ToggleVisibility element.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTargetElement.#ctor">
            <summary>
            Initializes an empty <see cref="T:AdaptiveCards.AdaptiveTargetElement"/>.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTargetElement.#ctor(System.String)">
            <summary>
            Initializes an <see cref="T:AdaptiveCards.AdaptiveTargetElement"/> instance with the supplied properties.
            </summary>
            <param name="elementId">The id of the target element.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTargetElement.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes an <see cref="T:AdaptiveCards.AdaptiveTargetElement"/> instance with the supplied properties.
            </summary>
            <param name="elementId">The Id of the target element.</param>
            <param name="isVisible">Initial visible state.</param>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTargetElement.ElementId">
            <summary>
            Target element Id.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTargetElement.IsVisible">
            <summary>
            Target element visibility.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTargetElement.IsVisibleXml">
            <summary>
            Helper to do custom serialization of <see cref="P:AdaptiveCards.AdaptiveTargetElement.IsVisible"/> property for XML.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTargetElement.ShouldSerializeIsVisibleXml">
            <summary>
            Determines whether the <see cref="P:AdaptiveCards.AdaptiveTargetElement.IsVisibleXml"/> property should be serialized.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTargetElement.op_Implicit(System.String)~AdaptiveCards.AdaptiveTargetElement">
            <summary>
            Implicit conversion from <see cref="T:System.String"/> to <see cref="T:AdaptiveCards.AdaptiveTargetElement"/>.
            </summary>
            <param name="elementId"></param>
        </member>
        <member name="T:AdaptiveCards.AdaptiveTextBlock">
            <summary>
            Represents the TextBlock element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextBlock.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.Type">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveTextBlock.#ctor">
            <summary>
            Initializes an empty <see cref="T:AdaptiveCards.AdaptiveTextBlock"/> instance.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTextBlock.#ctor(System.String)">
            <summary>
            Initializes an <see cref="T:AdaptiveCards.AdaptiveTextBlock"/> instance with the supplied text.
            </summary>
            <param name="text">The text of this TextBlock.</param>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.Size">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.Weight">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.Color">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.IsSubtle">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.Italic">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.Strikethrough">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.Text">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.HorizontalAlignment">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.Wrap">
            <summary>
            Controls text wrapping behavior.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.MaxLines">
            <summary>
            When <see cref="P:AdaptiveCards.AdaptiveTextBlock.Wrap"/> is true, this controls the maximum number of lines of text to display.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.MaxWidth">
            <summary>
            The maximum width of the TextBlock.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextBlock.FontType">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveTextColor">
            <summary>
                Controls the color style of TextBlock Elements
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextColor.Default">
            <summary>
                The default color which guarentees appropriate contrast
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextColor.Dark">
            <summary>
                Forces the text to be rendered in a dark color which is suitable when displayed over a light background
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextColor.Light">
            <summary>
                Forces the text to be rendered in a light color which is suitable when displayed over a dark background
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextColor.Accent">
            <summary>
                Accent the text
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextColor.Good">
            <summary>
                Good (such as green)
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextColor.Warning">
            <summary>
                Warning (such as yellow)
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextColor.Attention">
            <summary>
                Highlight as needing attention (such as red)
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveTextInput">
            <summary>
            Represents an Input.Text element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextInput.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextInput.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextInput.Placeholder">
            <summary>
            Placeholder text to display when the input is empty.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextInput.Value">
            <summary>
            The initial value for the field.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextInput.Style">
            <summary>
            Hint of style of input, if client doesn't support the style it will become simple text input.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextInput.IsMultiline">
            <summary>
            Controls whether multiple lines of text are allowed.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextInput.MaxLength">
            <summary>
            Hint of maximum number of characters to collect (may be ignored by some clients).
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextInput.InlineAction">
            <summary>
            <see cref="T:AdaptiveCards.AdaptiveAction"/> to invoke inline.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTextInput.GetNonInteractiveValue">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextInput.Regex">
            <summary>
            Regular expression used for validating the input.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveTextInputStyle">
            <summary>
            Style of text input.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextInputStyle.Text">
            <summary>
            Unstructured plain text.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextInputStyle.Tel">
            <summary>
            Input is a telephone number. The client may use this information to provide optimized keyboard input for the
            user.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextInputStyle.Url">
            <summary>
            Input is a url. The client may use this information to provide optimized keyboard input for the user.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextInputStyle.Email">
            <summary>
            Input is an email address. The client may use this information to provide optimized keyboard input for the user.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveTextRun">
            <summary>
            Represents a TextRun.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextRun.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.Type">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveTextRun.#ctor">
            <summary>
            Initializes an empty <see cref="T:AdaptiveCards.AdaptiveTextRun"/>.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTextRun.#ctor(System.String)">
            <summary>
            Initializes an <see cref="T:AdaptiveCards.AdaptiveTextRun"/> with the given text.
            </summary>
            <param name="text">The initial text for this TextRun.</param>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.Size">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.Weight">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.Color">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.IsSubtle">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.Italic">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.Strikethrough">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.Highlight">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.Text">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.FontType">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.SelectAction">
            <summary>
                Action for this text run
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTextRun.Underline">
            <summary>
            Display this text underlined.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveTextSize">
            <summary>
                Controls the relative size of TextBlock elements
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextSize.Default">
            <summary>
                Default text size
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextSize.Normal">
            <summary>
                Default text size
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextSize.Small">
            <summary>
                Smallest text size
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextSize.Medium">
            <summary>
                Slightly larger than default
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextSize.Large">
            <summary>
                Slightly larger then medium
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextSize.ExtraLarge">
            <summary>
                The largest text size
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveTextWeight">
            <summary>
                Controls the weight of TextBock Elements
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextWeight.Default">
            <summary>
                The default text weight
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextWeight.Normal">
            <summary>
                The default text weight
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextWeight.Lighter">
            <summary>
                Lighter text (thinner stroke)
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTextWeight.Bolder">
            <summary>
                Bolder text (wider stroke)
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveTimeInput">
            <summary>
            Represents the Input.Time element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTimeInput.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTimeInput.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTimeInput.Placeholder">
            <summary>
            Placeholder text to display when the input is empty.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTimeInput.Value">
            <summary>
            The initial value for the field.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTimeInput.Min">
            <summary>
            Hint of minimum value (may be ignored by some clients).
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTimeInput.Max">
            <summary>
            Hint of maximum value (may be ignored by some clients)
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTimeInput.GetNonInteractiveValue">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveToggleInput">
            <summary>
            Represents the Input.Toggle element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveToggleInput.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveToggleInput.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveToggleInput.Title">
            <summary>
            Title text for this element.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveToggleInput.ValueOn">
            <summary>
            Value to use when toggle is on.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveToggleInput.ValueOff">
            <summary>
            Value to use when toggle is off.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveToggleInput.Wrap">
            <summary>
            Controls text wrapping behavior.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveToggleInput.Value">
            <summary>
            The value for the field.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveToggleInput.GetNonInteractiveValue">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveToggleVisibilityAction">
            <summary>
            Represents the Action.ToggleVisibility element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveToggleVisibilityAction.TypeName">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveToggleVisibilityAction.Type">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveToggleVisibilityAction.TargetElements">
            <summary>
            Ids of elements whose visibility this element should change.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveTypedBaseElementConverter">
            <summary>
            JsonConverters that deserialize to AdaptiveCards elements and use ParseContext must inherit this class.
            ParseContext provides id generation, id collision detections, and other useful services during deserialization.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTypedBaseElementConverter.ParseContext">
            <summary>
            The <see cref="P:AdaptiveCards.AdaptiveTypedBaseElementConverter.ParseContext"/> to use while parsing in AdaptiveCards.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveTypedElement">
            <summary>
            Base for almost all representable elements in AdaptiveCards.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTypedElement.Type">
            <summary>
            The AdaptiveCard element that this class implements.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTypedElement.AdditionalProperties">
            <summary>
            Additional properties not found on the default schema.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTypedElement.ShouldSerializeAdditionalProperties">
            <summary>
            Determines whether the <see cref="P:AdaptiveCards.AdaptiveTypedElement.AdditionalProperties"/> property should be serialized.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTypedElement.Fallback">
            <summary>
            The fallback property controls behavior when an unexpected element or error is encountered.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTypedElement.InternalID">
            <summary>
            The <see cref="T:AdaptiveCards.AdaptiveInternalID"/> for this element.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTypedElement.Id">
            <summary>
            A unique ID associated with the element. For Inputs, the ID will be used as the key for Action.Submit response.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTypedElement.Requires">
            <summary>
             A collection representing features and feature versions that this element requires.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTypedElement.MeetsRequirements(AdaptiveCards.AdaptiveFeatureRegistration)">
            <summary>
            Determines if this element's requirements are satisfied.
            </summary>
            <param name="featureRegistration">The host's <see cref="T:AdaptiveCards.AdaptiveFeatureRegistration"/>.</param>
            <returns>true iff this element's requirements are met.</returns>
        </member>
        <member name="T:AdaptiveCards.AdaptiveTypedElementConverter">
            <summary>
            This handles using the type field to instantiate strongly typed objects on deserialization.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveTypedElementConverter.Warnings">
            <summary>
            The list of warnings generated while converting.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveTypedElementConverter.TypedElementTypes">
            <summary>
            Default types to support, register any new types to this list
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTypedElementConverter.RegisterTypedElement``1(System.String)">
            <summary>
            Registers a new element with the element converter.
            </summary>
            <param name="typeName">The <see cref="P:AdaptiveCards.AdaptiveTypedElement.Type"/> of the element to register.</param>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTypedElementConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTypedElementConverter.CanWrite">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveTypedElementConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.AdaptiveTypedElementConverter.CanRead">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveTypedElementConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.AdaptiveTypedElementConverter.GetElementTypeName(System.Type,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Retrieves the type name of an AdaptiveCards object.
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveTypedElementConverter.CreateElement``1(System.String)">
            <summary>
            Instantiates a new strongly-typed element of the given type.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveUnknownElement">
            <summary>
            Represents an unknown element encountered while parsing.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveUnknownElement.Type">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveUnknownAction">
            <summary>
            Represents an unknown action encountered while parsing.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveUnknownAction.Type">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.AdaptiveVerticalAlignment">
            <summary>
            Defines the vertical alignment behavior of an element.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveVerticalAlignment.Top">
            <summary>
            Align to the top.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveVerticalAlignment.Center">
            <summary>
            Centered.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveVerticalAlignment.Bottom">
            <summary>
            Align to the bottom.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveVerticalContentAlignment">
            <summary>
            Controls the vertical alignment of child elements within a container.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveVerticalContentAlignment.Top">
            <summary>
            Align to the top.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveVerticalContentAlignment.Center">
            <summary>
            Center within the container.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveVerticalContentAlignment.Bottom">
            <summary>
            Align to the bottom of the container.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveWarning">
            <summary>
            Represents a warning generated while parsing.
            </summary>
        </member>
        <member name="T:AdaptiveCards.AdaptiveWarning.WarningStatusCode">
            <summary>
            Status code representing the type of warning encountered.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveWarning.WarningStatusCode.UnsupportedSchemaVersion">
            <summary>
            The supplied schema version wasn't recognized.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveWarning.WarningStatusCode.InvalidLanguage">
            <summary>
            The supplied language was not valid.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveWarning.WarningStatusCode.MaxActionsExceeded">
            <summary>
            The maximum number of <see cref="T:AdaptiveCards.AdaptiveAction"/>s was exceeded.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveWarning.WarningStatusCode.EmptyLabelInRequiredInput">
            <summary>
            An input was marked as requiring input, but didn't have a label.
            </summary>
        </member>
        <member name="F:AdaptiveCards.AdaptiveWarning.WarningStatusCode.NoErrorMessageForValidatedInput">
            <summary>
            An input has validation properties set, but no error message to display to users
            </summary>
        </member>
        <member name="M:AdaptiveCards.AdaptiveWarning.#ctor(System.Int32,System.String)">
            <summary>
            Initializes an <see cref="T:AdaptiveCards.AdaptiveWarning"/> instance with the given properties.
            </summary>
            <param name="code">The <see cref="T:AdaptiveCards.AdaptiveWarning.WarningStatusCode"/> encountered.</param>
            <param name="message">The warning message.</param>
        </member>
        <member name="P:AdaptiveCards.AdaptiveWarning.Code">
            <summary>
            The <see cref="T:AdaptiveCards.AdaptiveWarning.WarningStatusCode"/>.
            </summary>
        </member>
        <member name="P:AdaptiveCards.AdaptiveWarning.Message">
            <summary>
            The warning message.
            </summary>
        </member>
        <member name="T:AdaptiveCards.ColorUtil">
            <summary>
            A collection of utilities for processing colors.
            </summary>
        </member>
        <member name="F:AdaptiveCards.ColorUtil.alphaColorLength">
            <summary>
            The length of a string in the "#AARRGGBB" format.
            </summary>
        </member>
        <member name="F:AdaptiveCards.ColorUtil.colorStringLength">
            <summary>
            The length of a string in the "#RRGGBB" format.
            </summary>
        </member>
        <member name="M:AdaptiveCards.ColorUtil.IsValidColor(System.String)">
            <summary>
            Determines if a string is a valid string of the format #AARRGGBB or #RRGGBB.
            </summary>
            <param name="color">The string to test for color format.</param>
            <returns>true iff the string is of the format #AARRGGBB or #RRGGBB.</returns>
        </member>
        <member name="M:AdaptiveCards.ColorUtil.TryParseColor(System.String,System.Int32@)">
            <summary>
            Attempts to parse the supplied string as an integer if it is a valid color format.
            </summary>
            <param name="color">The string to convert to an int.</param>
            <param name="result">The result of converting the string.</param>
            <returns>true iff the string was successfully converted.</returns>
        </member>
        <member name="M:AdaptiveCards.ColorUtil.GenerateLighterColor(System.String)">
            <summary>
            Create a color that's 25% lighter than the given color.
            </summary>
            <param name="hexColor">A string in the format of #AARRGGBB or #RRGGBB to lighten.</param>
            <returns>A 25% brighter version of the supplied color, or "#FF000000" if hexColor is an invalid format.</returns>
        </member>
        <member name="T:AdaptiveCards.HashColorConverter">
            <summary>
            Helper class to validate and convert color strings.
            </summary>
        </member>
        <member name="P:AdaptiveCards.HashColorConverter.Warnings">
            <summary>
            A list of warnings encountered during processing.
            </summary>
        </member>
        <member name="M:AdaptiveCards.HashColorConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.HashColorConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.HashColorConverter.CanWrite">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.HashColorConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.JsonExtensions">
            <summary>
            Helper class for color validation.
            </summary>
        </member>
        <member name="M:AdaptiveCards.JsonExtensions.IsHexDigit(System.Char)">
            <summary>
            Determines if a character is a valid hex digit.
            </summary>
            <param name="c">Character to check.</param>
            <returns>true iff c is a valid hex digit.</returns>
        </member>
        <member name="T:AdaptiveCards.IAdaptiveTextElement">
            <summary>
            Interface encapsulating the properties of an AdaptiveCards element that displays text.
            </summary>
        </member>
        <member name="P:AdaptiveCards.IAdaptiveTextElement.Size">
            <summary>
            The size to use while displaying the text.
            </summary>
        </member>
        <member name="P:AdaptiveCards.IAdaptiveTextElement.Weight">
            <summary>
            The weight to use while displaying the text.
            </summary>
        </member>
        <member name="P:AdaptiveCards.IAdaptiveTextElement.Color">
            <summary>
            The color to use while displaying the text.
            </summary>
        </member>
        <member name="P:AdaptiveCards.IAdaptiveTextElement.IsSubtle">
            <summary>
            Make the text less prominent when displayed.
            </summary>
        </member>
        <member name="P:AdaptiveCards.IAdaptiveTextElement.Italic">
            <summary>
            Display the text using italics.
            </summary>
        </member>
        <member name="P:AdaptiveCards.IAdaptiveTextElement.Strikethrough">
            <summary>
            Display this text with strikethrough.
            </summary>
        </member>
        <member name="P:AdaptiveCards.IAdaptiveTextElement.Text">
            <summary>
            The text to display.
            </summary>
        </member>
        <member name="P:AdaptiveCards.IAdaptiveTextElement.FontType">
            <summary>
            Controls which <see cref="T:AdaptiveCards.AdaptiveFontType"/> is used to display the text.
            </summary>
        </member>
        <member name="T:AdaptiveCards.IgnoreEmptyItemsConverter`1">
            <summary>
            JSON converter that will drop empty element items.
            </summary>
            <typeparam name="T">Type of the objects to be converted.</typeparam>
        </member>
        <member name="M:AdaptiveCards.IgnoreEmptyItemsConverter`1.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.IgnoreEmptyItemsConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="P:AdaptiveCards.IgnoreEmptyItemsConverter`1.CanWrite">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.IgnoreEmptyItemsConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.IgnoreNullEnumConverter`1">
            <summary>
            JSON converter that will ignore enum values that can't be parsed correctly.
            </summary>
        </member>
        <member name="P:AdaptiveCards.IgnoreNullEnumConverter`1.Warnings">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.IgnoreNullEnumConverter`1.#ctor">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.IgnoreNullEnumConverter`1.#ctor(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.IgnoreNullEnumConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:AdaptiveCards.IgnoreNullEnumConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:AdaptiveCards.ParseContext">
            <summary>
            Encapsulates state necessary to correctly parse an AdaptiveCard.
            </summary>
        </member>
        <member name="T:AdaptiveCards.ParseContext.ContextType">
            <summary>
            Denotes what type of AdaptiveCard element this ParseContext represents.
            </summary>
        </member>
        <member name="F:AdaptiveCards.ParseContext.ContextType.Element">
            <summary>
            Represents an Element (i.e. something that belongs in the body of a card).
            </summary>
        </member>
        <member name="F:AdaptiveCards.ParseContext.ContextType.Action">
            <summary>
            Represents an Action (i.e. something that belongs in an ActionSet or in the actions of a card).
            </summary>
        </member>
        <member name="P:AdaptiveCards.ParseContext.Type">
            <summary>
            Tracks the most recently encountered element type.
            </summary>
        </member>
        <member name="M:AdaptiveCards.ParseContext.PushElement(System.String,AdaptiveCards.AdaptiveInternalID)">
            <summary>
            Pushes the supplied element state on to the context stack.
            </summary>
            <remarks>Used by element converters to determine how to perform element fallback.</remarks>
            <param name="idJsonProperty">The value of the current element's "id" property.</param>
            <param name="internalId">The current element's <see cref="T:AdaptiveCards.AdaptiveInternalID"/>.</param>
        </member>
        <member name="M:AdaptiveCards.ParseContext.PopElement">
            <summary>
            Pops an element off of the context stack.
            </summary>
        </member>
        <member name="M:AdaptiveCards.ParseContext.GetNearestFallbackID(AdaptiveCards.AdaptiveInternalID)">
            <summary>
            Walk stack looking for first element to be marked fallback (which isn't the ID we're supposed to
            skip), then return its internal ID. If none, return an invalid ID.
            </summary>
            <param name="skipID"><see cref="T:AdaptiveCards.AdaptiveInternalID"/> of the element to ignore.</param>
            <returns>
            The <see cref="T:AdaptiveCards.AdaptiveInternalID"/> of the nearest element with fallback, or an invalid <see
            cref="T:AdaptiveCards.AdaptiveInternalID"/> if there is no element with fallback.
            </returns>
        </member>
        <member name="T:AdaptiveCards.RemoteResourceInformation">
            <summary>
            Contains information about a remote source.
            </summary>
        </member>
        <member name="M:AdaptiveCards.RemoteResourceInformation.#ctor(System.String,System.String)">
            <summary>
            Initializes a <see cref="T:AdaptiveCards.RemoteResourceInformation"/> with the given properties.
            </summary>
            <param name="url">The URL of the remote resource.</param>
            <param name="mimeType">The mimetype of the remote resource.</param>
        </member>
        <member name="T:AdaptiveCards.Rendering.ActionsConfig">
            <summary>
            Properties which control rendering and behavior of actions.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ActionsConfig.ActionsOrientation">
            <summary>
            Arrange actions horizontally or vertically.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ActionsConfig.ActionAlignment">
            <summary>
            Control horizontal alignment behavior.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ActionsConfig.ButtonSpacing">
            <summary>
            Controls the amount of space between actions.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ActionsConfig.MaxActions">
            <summary>
            Max number of actions to allow in parsed cards.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ActionsConfig.Spacing">
            <summary>
            Controls spacing between card elements.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ActionsConfig.ShowCard">
            <summary>
            Controls the behavior of Action.ShowCard.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ActionsConfig.IconPlacement">
            <summary>
            Controls where action icons are placed relative to titles.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ActionsConfig.IconSize">
            <summary>
            Defines the size at which to render icons.
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.ShowCardConfig">
            <summary>
            Configuration for Action.ShowCard elements.
            </summary>
        </member>
        <member name="M:AdaptiveCards.Rendering.ShowCardConfig.#ctor">
            <summary>
            Initializes a default <see cref="T:AdaptiveCards.Rendering.ShowCardConfig"/>.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ShowCardConfig.ActionMode">
            <summary>
            Controls how Action.ShowCard elements behave when invoked.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ShowCardConfig.Style">
            <summary>
            Determines what style to use when displaying an inline Action.ShowCard.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ShowCardConfig.InlineTopMargin">
            <summary>
            Controls the margin to use when showing an inline Action.ShowCard.
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.ShowCardActionMode">
            <summary>
            Controls the behavior of an invoked Action.ShowCard.
            </summary>
        </member>
        <member name="F:AdaptiveCards.Rendering.ShowCardActionMode.Inline">
            <summary>
            Expand the Action.ShowCard in-place.
            </summary>
        </member>
        <member name="F:AdaptiveCards.Rendering.ShowCardActionMode.Popup">
            <summary>
            Display the Action.ShowCard in a popup window.
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.ActionsOrientation">
            <summary>
            Controls the layout of actions.
            </summary>
        </member>
        <member name="F:AdaptiveCards.Rendering.ActionsOrientation.Horizontal">
            <summary>
            Actions should be laid out horizontally.
            </summary>
        </member>
        <member name="F:AdaptiveCards.Rendering.ActionsOrientation.Vertical">
            <summary>
            Actions should be laid out vertically.
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.IconPlacement">
            <summary>
            Controls where to place icons in actions.
            </summary>
        </member>
        <member name="F:AdaptiveCards.Rendering.IconPlacement.AboveTitle">
            <summary>
            Display icons above text.
            </summary>
        </member>
        <member name="F:AdaptiveCards.Rendering.IconPlacement.LeftOfTitle">
            <summary>
            Display icons to the left of the text.
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.AdaptiveActionHandlers">
            <summary>
            A collection of actions known by the host.
            </summary>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveActionHandlers.AddSupportedAction``1">
            <summary>
            Adds a given action type. Any action in a payload not specified here will be dropped from the rendered card.
            </summary>
            <typeparam name="TAction">The type of the action to add.</typeparam>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveActionHandlers.RemoveSupportedAction``1">
            <summary>
            Remove support for an action type. This will prevent these actions from appearing in the rendered card.
            </summary>
            <typeparam name="TAction">The type of the action to remove.</typeparam>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveActionHandlers.IsSupported(System.Type)">
            <summary>
            Determines whether or not the action is supported by the renderer.
            </summary>
            <param name="type">The Type for which to determine support.</param>
            <returns>true iff the Type is supported.</returns>
        </member>
        <member name="T:AdaptiveCards.Rendering.AdaptiveCardConfig">
            <summary>
            Contains options for the AdaptiveCard element.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveCardConfig.AllowCustomStyle">
            <summary>
            Determines whether custom styles should be honored.
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.AdaptiveCardRendererBase`2">
            <summary>
            Abstract base class that every AdaptiveCards renderer must implement.
            </summary>
            <typeparam name="TUIElement">The base UI element type the renderer implements (e.g. "HTMLElement" or
            "FrameworkElement").</typeparam>
            <typeparam name="TContext">The type of the renderer context to use (e.g. "AdaptiveRenderContext").</typeparam>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveCardRendererBase`2.GetSupportedSchemaVersion">
            <summary>
            Provides the highest schema version that this renderer supports.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveCardRendererBase`2.SupportedSchemaVersion">
            <summary>
            Provides the highest schema version that this renderer supports.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveCardRendererBase`2.HostConfig">
            <summary>
            A Host Configuration object to determine base styling and behavior of the rendered card
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveCardRendererBase`2.ElementRenderers">
            <summary>
            The dictionary of supported element types and their associated rendering functions
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.AdaptiveConfigBase">
            <summary>
            Base class for configuration-holding renderer classes.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveConfigBase.AdditionalData">
            <summary>
            Holds additional data in a configuration that doesn't map to known properties.
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.AdaptiveElementRenderers`2">
            <summary>
            Encapsulates information needed to map from element types to factory methods for instantiating them.
            </summary>
            <typeparam name="TUIElement">The base UI element type the renderer implements (e.g. "HTMLElement" or
            "FrameworkElement").</typeparam>
            <typeparam name="TContext">The type of the renderer context to use (e.g. "AdaptiveRenderContext").</typeparam>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveElementRenderers`2.Set``1(System.Func{``0,`1,`0})">
            <summary>
            Registers or replaces a factory method for the given element type.
            </summary>
            <param name="renderer">Factory method for instantiating an element object of type TElement.</param>
            <typeparam name="TElement">The type of the element object.</typeparam>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveElementRenderers`2.Remove``1">
            <summary>
            Removes the registration for the element type.
            </summary>
            <typeparam name="TElement">The type of element object to remove.</typeparam>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveElementRenderers`2.Get``1">
            <summary>
            Gets the factory method for an element type.
            </summary>
            <typeparam name="TElement">The type of element object to get.</typeparam>
            <returns>The factory method for the element object of type TElement.</returns>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveElementRenderers`2.Get(System.Type)">
            <summary>
            Gets the factory method for an element type.
            </summary>
            <param name="type">The type of object for which to retrieve the factory method.</param>
            <returns>The factory method for the element object.</returns>
        </member>
        <member name="T:AdaptiveCards.Rendering.AdaptiveHostConfig">
            <summary>
            Contains host-configurable options for controlling rendering behavior.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.Actions">
            <summary>
            Properties which control rendering and behavior of actions.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.AdaptiveCard">
            <summary>
            Properties that control the rendering and behavior of the toplevel Adaptive Card.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.ContainerStyles">
            <summary>
            Definitions of the various styles that can be applied to containers and container-like elements.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.ImageSizes">
            <summary>
            Controls the sizes at which images render.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.ImageSet">
            <summary>
            Controls the default size at which images in an ImageSet are rendered.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.FactSet">
            <summary>
            Controls the rendering of the FactSet element.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.FontFamily">
            <summary>
            Defines which font families to use during rendering. (Obsolete)
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.FontSizes">
            <summary>
            Defines which font sizes to use during rendering. (Obsolete)
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.FontWeights">
            <summary>
            Defines which font weights to use during rendering. (Obsolete)
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.FontTypes">
            <summary>
            Defines font families, sizes, and weights to use during rendering.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.Spacing">
            <summary>
            Defines the various values to use for spacing.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.Separator">
            <summary>
            Controls the appearance of the separator.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.Media">
            <summary>
            Controls the rendering and behavior of media elements.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.Inputs">
            <summary>
            Controls the rendering and behavior of input elements.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.SupportsInteractivity">
            <summary>
            Toggles whether or not to render inputs and actions.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveHostConfig.ImageBaseUrl">
            <summary>
            Image Base URL for relative URLs.
            </summary>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveHostConfig.ResolveFinalAbsoluteUri(System.String)">
            <summary>
            Resolves a URI string in an absolute <see cref="T:System.Uri"/>.
            </summary>
            <param name="uriString">The URI to resolve.</param>
            <returns>The absolute Uri that uriString represents.</returns>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveHostConfig.ResolveFinalAbsoluteUri(System.Uri)">
            <summary>
            Converts a Uri into absolute form using <see cref="P:AdaptiveCards.Rendering.AdaptiveHostConfig.ImageBaseUrl"/> as needed.
            </summary>
            <param name="uri">URI to resolve.</param>
            <returns>An absolute URI for uri.</returns>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveHostConfig.GetSpacing(AdaptiveCards.AdaptiveSpacing)">
            <summary>
            Get the numeric value of spacing to use for a given spacing type.
            </summary>
            <param name="spacing">The spacing to look up.</param>
            <returns>The numeric value for the type of spacing.</returns>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveHostConfig.FromJson(System.String)">
            <summary>
            Constructs an <see cref="T:AdaptiveCards.Rendering.AdaptiveHostConfig"/> instance from the given JSON.
            </summary>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveHostConfig.ToJson">
            <summary>
            Serialize this Host Config to JSON.
            </summary>
            <returns>A JSON string representation of this Host Config.</returns>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveHostConfig.GetFontFamily(AdaptiveCards.AdaptiveFontType)">
            <summary>
            Retrieves the name of the font family given the desired AdaptiveFontType.
            </summary>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveHostConfig.GetFontWeight(AdaptiveCards.AdaptiveFontType,AdaptiveCards.AdaptiveTextWeight)">
            <summary>
            Retrieves a font weight for an AdaptiveFontType.
            </summary>
        </member>
        <member name="M:AdaptiveCards.Rendering.AdaptiveHostConfig.GetFontSize(AdaptiveCards.AdaptiveFontType,AdaptiveCards.AdaptiveTextSize)">
            <summary>
            Retrieves a font size for an AdaptiveFontType.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.AdaptiveRenderException.CardFallbackText">
            <summary>
            The fallback text associated with this card, if provided by the card author
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.AdaptiveVisitor">
            <summary>
                Utility class which allows you to visit every node
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ContainerStyleConfig.BackgroundColor">
            <summary>
            The background color to use for this container
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ContainerStyleConfig.ForegroundColors">
            <summary>
            The font colors to use for this container
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.ErrorMessageConfig">
            <summary>
            Properties which control rendering of media
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ErrorMessageConfig.Spacing">
            <summary>
             The text color of the label
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ErrorMessageConfig.Size">
            <summary>
             The text size of the label
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.ErrorMessageConfig.Weight">
            <summary>
             The text weight of the label
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.FactSetConfig.Title">
            <summary>
            TextBlock to use for Titles in factsets
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.FactSetConfig.Value">
            <summary>
            TextBlock to use for Values in fact sets
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.FactSetConfig.Spacing">
            <summary>
            Spacing between facts and values
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.FontColorConfig.Default">
            <summary>
            Color in #RRGGBB format
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.HighlightColorConfig.Default">
            <summary>
            Color in #RRGGBB format
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.InputsConfig">
            <summary>
            Properties which control rendering of media
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.InputLabelConfig">
            <summary>
            Properties which control rendering of media
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.InputLabelConfig.Color">
            <summary>
             The text color of the label
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.InputLabelConfig.IsSubtle">
            <summary>
             Make the label less prominent
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.InputLabelConfig.Size">
            <summary>
             The text size of the label
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.InputLabelConfig.Suffix">
            <summary>
             Suffix to be displayed next to the label. Only respected for required inputs
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.InputLabelConfig.Weight">
            <summary>
             The text weight of the label
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.LabelConfig">
            <summary>
            Properties which control rendering of input labels
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.LabelConfig.InputSpacing">
            <summary>
            Specifies the spacing between the label and the input
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.MediaConfig">
            <summary>
            Properties which control rendering of media
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.MediaConfig.DefaultPoster">
            <summary>
            Default poster URL to use for media thumbnail
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.MediaConfig.PlayButton">
            <summary>
            Play button URL to use for media thumbnail
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.MediaConfig.AllowInlinePlayback">
            <summary>
            Controls whether the media is played in the card or sent to host
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.RenderedAdaptiveCardBase">
            <summary>
            The base class for RenderedAdaptiveCard. Renderers extend this class to provide their native UI element property.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.RenderedAdaptiveCardBase.OriginatingCard">
            <summary>
            The card that the visual was rendered from.
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.RenderedAdaptiveCardBase.Warnings">
            <summary>
            If any modifications were done to the rendered card they will be reported here
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.RenderedAdaptiveCardBase.UserInputs">
            <summary>
            Provides access to the input fields on a card
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.RenderedAdaptiveCardInputs">
            <summary>
            Provides access to the input fields on a card
            </summary>
        </member>
        <member name="M:AdaptiveCards.Rendering.RenderedAdaptiveCardInputs.AsJson">
            <summary>
            Read the input fields as a JSON object. All input values will serialize to strings
            </summary>
            <returns></returns>
        </member>
        <member name="M:AdaptiveCards.Rendering.RenderedAdaptiveCardInputs.AsDictionary">
            <summary>
            Read the input fields as a Dictionary. All input values will serialize the strings
            </summary>
            <returns></returns>
        </member>
        <member name="T:AdaptiveCards.Rendering.RendererUtilities">
            <summary>
                Utility methods for dealing with body and binding
            </summary>
        </member>
        <member name="M:AdaptiveCards.Rendering.RendererUtilities.ApplyTextFunctions(System.String,System.String)">
            <summary>
                This funct will return modified text replacing {{DATE|TIME()}} style functions as the formatted text
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:AdaptiveCards.Rendering.SeparatorConfig.LineThickness">
            <summary>
            If there is a visible line, how thick should the line be
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.SeparatorConfig.LineColor">
            <summary>
            If there is a visible color, what color to use
            </summary>
        </member>
        <member name="T:AdaptiveCards.Rendering.SpacingsConfig">
            <summary>
            Specifies how much spacing should be used for the various spacing options
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.TextBlockConfig.Size">
            <summary>
             The size of the text
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.TextBlockConfig.Weight">
            <summary>
             The weight of the text
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.TextBlockConfig.Color">
            <summary>
             The color of the text
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.TextBlockConfig.IsSubtle">
            <summary>
              Should it be subtle?
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.TextBlockConfig.Wrap">
            <summary>
             Is it allowed for the text to wrap
            </summary>
        </member>
        <member name="P:AdaptiveCards.Rendering.TextBlockConfig.MaxWidth">
            <summary>
            The maximum width for text
            </summary>
        </member>
        <member name="T:AdaptiveCards.WarningLoggingContractResolver">
            <summary>
            This JSON contract resolver checks if the JsonConverter can log warnings, and if so sets the Warnings property
            </summary>
        </member>
        <member name="M:AdaptiveCards.WarningLoggingContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>
                Override when a member property is being instantiated. At this point we know what converter
                is being used for the property. If the converter can log warnings, then give it our collection
            </summary>
            <param name="member"></param>
            <param name="memberSerialization"></param>
            <returns></returns>
        </member>
    </members>
</doc>
